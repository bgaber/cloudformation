---
# Brian Gaber
# IAM User Creation Cloudformation Template
# Stack can be created from the console or from the AWS CLI.
# If stack is created from the console then resources will be created in the region shown in the upper right.
# If stack is created from the AWS CLI then the region flag must be used or the stack will be created in the AWS default region (us-east-1).
# Example of creating stack from the AWS CLI:
# aws --region us-east-1 cloudformation create-stack --stack-name myteststack --template-body file://bitbucket-pipelines-user.yaml --parameters ...
# This CloudFormation Template will create one IAM user

Parameters:
  CreationDate:
    Description: Creation Date
    Type: String
    Default: "2023-02-16 10:30:00"
    AllowedPattern: "^\\d{4}(-\\d{2}){2} (\\d{2}:){2}\\d{2}$"
    ConstraintDescription: Date and time of creation
  CreatedBy:
    Description: Creator of resources
    Default: Brian Gaber
    Type: String
  Application:
    Description: Application Name
    Default: BitBucket Pipelines
    Type: String
  Username:
    Description: User Name
    Default: bitbucket_pipelines_test
    Type: String
  Account:
    Description: AWS Account
    Default: 472510080448
    Type: String

Resources:
  IAMpolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      Description: ECR Read Only Policy
      ManagedPolicyName: ECR_ReadOnly_Policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'ecr:GetRegistryPolicy'
              - 'ecr:DescribeImageScanFindings'
              - 'ecr:GetLifecyclePolicyPreview'
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:DescribeRegistry'
              - 'ecr:DescribePullThroughCacheRules'
              - 'ecr:DescribeImageReplicationStatus'
              - 'ecr:GetAuthorizationToken'
              - 'ecr:ListTagsForResource'
              - 'ecr:ListImages'
              - 'ecr:BatchGetRepositoryScanningConfiguration'
              - 'ecr:GetRegistryScanningConfiguration'
              - 'ecr:BatchGetImage'
              - 'ecr:DescribeImages'
              - 'ecr:DescribeRepositories'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:GetRepositoryPolicy'
              - 'ecr:GetLifecyclePolicy'
            Resource: '*'

  IAMuser:
    Type: AWS::IAM::User
    Properties:
      ManagedPolicyArns: 
        - !Ref IAMpolicy
      Policies:
        - PolicyName: BB_Pipelines_ECR_Write_Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: EcrAccess
                Effect: Allow
                Action:
                  - 'ecr:PutImageTagMutability'
                  - 'ecr:StartImageScan'
                  - 'ecr:PutImageScanningConfiguration'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:BatchDeleteImage'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:ReplicateImage'
                  - 'ecr:PutImage'
                Resource: !Join ["", ["arn:aws:ecr:us-east-1:", !Ref Account, ":repository/sre-team/imagebuilder"] ]
                #Resource: 'arn:aws:ecr:us-east-1:472510080448:repository/sre-team/imagebuilder'
      Tags:
        - Key: Created
          Value: !Ref CreationDate
        - Key: Creator
          Value: !Ref CreatedBy
        - Key: Application
          Value: !Ref Application
      UserName: !Ref Username

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "IAM User Information"
        Parameters:
          - Username
      - Label:
          default: "Tags"
        Parameters:
          - CreationDate
          - CreatedBy
          - Application
          - Owner

Outputs:
  IAMUserARN:
    Description: New IAM User ARN
    Value: !GetAtt IAMuser.Arn
    Export:
      Name: BBPipeIAMUserArn
  ManagedPolicyARN:
    Description: New IAM Managed Policy ARN
    Value: !Ref IAMpolicy